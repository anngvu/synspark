type: "quiz"
title: "Dr. Kim's Version Audit Challenge"
level: "intermediate-advanced"
meta:
  source: "2024-01-11.txt"
  source_date: "2024-01-11"
  source_timestamps: ["2024-01-11 11:49:20", "2024-01-11 12:13:10"]
  key_concepts: ["entity versioning", "version history", "deleted versions", "REST API"]
  updated_approach: true
  multiple_correct: false
context: |
  **Entity Version Management and Deleted Version Tracking**

  Some entities can be versioned and have a version history. Understanding current capabilities to return version information is important for data provenance and audit purposes.
question: "Dr. Kim, a data steward, needs to audit the complete version history of a critical dataset entity, including any versions that may have been deleted. They want to retrieve active and deleted versions for compliance reporting. What's the most effective approach to retrieve this comprehensive version information?"
answers:
  - text: "Use syn.getEntityVersions() which returns both active and deleted versions with status indicators"
    correct: false
    message: "While getEntityVersions() exists, it doesn't actually return status information about deleted versions."
    points: 0
  - text: "Use the REST API GET /entity/{id}/version endpoint to retrieve complete version metadata including deletion status."
    correct: false
    message: "Unfortunately, while this would be ideal, this REST API endpoint only returns information about the versions that exist in the system. There is currently no known service to return information about deleted entity versions."
    points: 0
  - text: "Compare the total version count with active versions - gaps indicate deleted versions"
    correct: false
    message: "While this method can identify that deletions occurred, it doesn't provide the detailed metadata needed for proper audit trails and compliance reporting in any case."
    points: 0
  - text: "Query the entity's provenance records to reconstruct the complete version history"
    correct: false
    message: "Provenance tracks data lineage and workflows, not the entity's version status. Version information requires direct entity version APIs."
    points: 0
  - text: "There is no currently no service that exposes deleted version info for Dr. Kim to use directly. If this is critical, ask the backend engineers for help."
    correct: true
    message: "Correct! In the UI, deleted versions don't show up. This is because the entity version service doesn't return deleted versions, and no known method exists for a regular user."
    points: 1
allow_retry: true
random_answer_order: true
